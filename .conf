php ext-gd
php zip unzip

dompdf
dom extension
gd extension
mbstring extension
php-font-lib
php-svg-lib

PHP extension php_zip enabled
PHP extension php_xml enabled
PHP extension php_gd2 enabled
# Installation



CREATE OR REPLACE VIEW `no_liquidados` AS select `credits`.`id` AS `expediente`,`credits`.`notary_id` AS `notary_id`,
                               `credits`.`created_at` AS `created_at`,`credits`.`monto_credito` AS `monto_credito`,
                               `credits`.`agency_id` AS `agency_id`,`notaries`.`nombre` AS `notario`,
                               `partners`.`id` AS `cif`,`partners`.`nombre` AS `asociado`
from ((`credits` join `partners` on((`credits`.`partner_id` = `partners`.`id`)))
join `notaries` on((`credits`.`notary_id` = `notaries`.`id`)))
where ((`credits`.`created_at` < (now() - interval 61 day)) and isnull(`credits`.`liquidation_id`))
and `credits`.`estado`= 1;



//CONSULTA REPORTE CONTABILIDAD
select c.id as ID, c.partner_id as Cif, p.nombre as Nombre,
       c.monto_credito as 'Monto Credito', c.monto_ampliacion as 'Monto Ampliacion',
       c.monto_cobrado as 'Gastos Cobrado',c.numero_escritura as 'No. Escritura',
       c.fecha_escritura as 'Fecha Escrituracion', c.timbre_notarial as 'Timbre Notarial',
       c.gasto_papeleria as Gastos, c.consulta_electronica as 'Consultas',
       c.honorario_notario as Honorarios, (c.honorario_notario * 0.12) as Iva,
       c.honorario_registro as 'Registro',
       (c.timbre_notarial+c.gasto_papeleria+c.consulta_electronica+c.honorario_notario+c.honorario_registro+(c.honorario_notario*0.12)) as 'Total Gastos',
       c.diferencia as 'Diferencia', c.ajuste_liquidacion as 'Ajuste por Liquidacion',
       c.liquidation_id as 'Estatus',l.created_at as 'liquidacion creada',l.fecha_pago as 'Fecha Liquidado',
       c.credito_id as Credito,
       a2.cantidad as Anticipo, a.nombre as Agencia,
       DATE_FORMAT(c.created_at, '%Y-%m-%d') as Creado,
       DATE_FORMAT(c.updated_at, '%Y-%m-%d') as Actualizado,
       n.nombre as Notario
from credits c
join partners p on c.partner_id = p.id
join agencies a on c.agency_id = a.id
join notaries n on c.notary_id = n.id
left join liquidations l on c.liquidation_id = l.id
left join advances a2 on c.id = a2.credit_id
where c.estado = 1
order by c.created_at;

//eliminar el índice de que el campo cuenta es unico
alter table credits drop index credits_cuenta_unique;


/**RUTAS*/

Route::get('/test',function (\App\Exports\NoLiquidadosExport $noLiquidadosExport, \Illuminate\Http\Request $request){
    //$envio=\Illuminate\Support\Facades\DB::table('no_liquidados')->where('agency_id',3)->get();

    //return $noLiquidadosExport;

    //return \App\Models\User::whereNotNull('session_id')->first();

    //return \App\Models\Partner::where('id',6632)->with('credits')->with('agency')->get();
    $sqlQuery='select partners.id as cif, partners.nombre as asociado, partners.cuenta,
  credits.id,credits.monto_credito,credits.monto_ampliacion,
  credits.created_at,notaries.nombre as notario, agencies.nombre as agencia
from partners join credits on partners.id = credits.partner_id
  join notaries on credits.notary_id = notaries.id
  join agencies on credits.agency_id = agencies.id
where partners.id=6632';
    //return \Illuminate\Support\Facades\DB::select(\Illuminate\Support\Facades\DB::raw($sqlQuery));

    return $request->ip();
});

Route::get('/enviar',function (){

    /*Mail::send('emails.test',[],function ($message){
    //       $message->to('wilmertezen@gmail.com','Notario')
    //       ->subject('Mail Testing');
    //       $message->from('expeco.ecosabarl@gmail.com','Administración');
    //    });*/
    //
    //    Mail::to('wilmer.tezen@ecosabarl.com')->send(new \App\Mail\BienvenidoColaborador());
    Mail::to('elvira.patzan@ecosabarl.com')->send(new \App\Mail\BienvenidoColaborador());
    Mail::to('floridalma.puluc@ecosabarl.com')->send(new \App\Mail\BienvenidoColaborador());
    Mail::to('yeimi.castro@ecosabarl.com')->send(new \App\Mail\BienvenidoColaborador());
    Mail::to('mayra.sequen@ecosabarl.com')->send(new \App\Mail\BienvenidoColaborador());

    if(Mail::failures()){
        return 'email incorrecto';
    }else{
        return 'email exitoso';
    }

    //return new \App\Mail\BienvenidoColaborador();
});

Route::get('creditos',function(){
    (new \App\Exports\AllCreditsExport())->store('reporte_general.xlsx');
    return "correcto";
});

/*\Illuminate\Support\Facades\DB::listen(function ($query){
   echo "<pre>{$query->sql}</pre>";
   echo "<pre>{$query->time}</pre>";
});*/